{"version":3,"sources":["./src/app/userlist/userlist.component.ts","./src/app/userlist/userlist.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/message/message.component.ts","./src/app/message/message.component.html","./src/app/feed/feed.component.ts","./src/app/feed/feed.component.html","./src/routes.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/room/room.component.ts","./src/app/room/room.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/services/chat.service.ts","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICC9C,mFAEA;IAAA,uEACA;IAAA,qEAAoD;IACpD,uDAAgB;IAAA,4DAAI;IACpB,uEAAc;IAAA,uDAAc;IAAA,4DAAI;IAAA,gEAChC;IAAA,4DAAgB;;;IALhB,yEAAW;IAEU,0DAAuB;IAAvB,mFAAuB;IAC5C,0DAAgB;IAAhB,0FAAgB;IACF,0DAAc;IAAd,8EAAc;;ADGzB,MAAM,iBAAiB;IAG5B,YAAY,IAAiB;QAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;;kFAPU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACI;QAAA,iIAEA;QAKF,4DAAM;;QANQ,0DAA0B;QAA1B,8EAA0B;;6FDO7B,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,oCAAoC;QAChD,WAAW,EAAE,2CAA2C;QACxD,SAAS,EAAE,oBAAoB;QAC/B,aAAa,EAAE,gCAAgC;QAC/C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACzBnE;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,yEACE;QAAA,wEAAyB;QAC3B,4DAAM;QACN,2EAA+B;QACjC,4DAAM;;6FDEO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACN;AACA;AACN;AACA;AACP;AACW;AACjB;AACI;AACI;AACgB;AACR;AAED;AACT;AACO;AACA;AACA;AACS;AACN;AACG;AACrB;;;;AA2BhC,MAAM,SAAS;;wFAAT,SAAS,cAFR,4DAAY;4IAEb,SAAS,mBAHT,CAAC,kEAAW,EAAE,kEAAW,CAAC,YAT5B;YACP,uEAAa;YACb,qEAAgB;YAChB,4DAAY,CAAC,OAAO,CAAC,qDAAS,CAAC;YAC/B,0DAAW;YACX,wEAAqB;YACrB,gFAAyB;YACzB,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;SACtD;mIAIU,SAAS,mBAtBlB,4DAAY;QACZ,mEAAa;QACb,mEAAa;QACb,mEAAa;QACb,4EAAgB;QAChB,sEAAc;QACd,yEAAe;QACf,8EAAiB;QACjB,wEAAe,aAGf,uEAAa;QACb,qEAAgB,gEAEhB,0DAAW;QACX,wEAAqB;QACrB,gFAAyB;6FAMhB,SAAS;cAxBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,mEAAa;oBACb,mEAAa;oBACb,mEAAa;oBACb,4EAAgB;oBAChB,sEAAc;oBACd,yEAAe;oBACf,8EAAiB;oBACjB,wEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,4DAAY,CAAC,OAAO,CAAC,qDAAS,CAAC;oBAC/B,0DAAW;oBACX,wEAAqB;oBACrB,gFAAyB;oBACzB,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;iBACtD;gBACD,SAAS,EAAE,CAAC,kEAAW,EAAE,kEAAW,CAAC;gBACrC,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;AAOlD,MAAM,gBAAgB;IAU3B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAJrC,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAK3B,IAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,CAAC;QACvD,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ;IAE3C,CAAC;;gFAvBU,gBAAgB;gGAAhB,gBAAgB;QCV7B,yEAEI;QAAA,yEAEE;QAAA,0EACM;QAAA,uDACJ;QAAA,4DAAO;QAEP,0EACI;QAAA,uDACJ;QAAA,4DAAO;QACX,4DAAM;QAEJ,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACV,4DAAM;;QAhBsB,4JAAmD;QAEpD,0DAA6C;QAA7C,6JAA6C;QAE9C,0DAAyC;QAAzC,6JAAyC;QACzD,0DACJ;QADI,wFACJ;QAEwB,0DAA4C;QAA5C,6JAA4C;QAChE,0DACJ;QADI,yFACJ;QAG0B,0DAAiD;QAAjD,6JAAiD;QACzE,0DACJ;QADI,8FACJ;;6FDLO,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;kHAGU,WAAW;kBAAnB,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;ICHzD,yEACI;IAAA,uEAAsB;IAAA,uEAAY;IAAA,4DAAI;IACtC,4EAAiD;IACrD,4DAAM;;;IADW,0DAAqB;IAArB,mFAAqB;;ADSnC,MAAM,aAAa;IAGxB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,QAAQ;QAEN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,YAAY,EAAE;IAEpD,CAAC;IACD,WAAW;QAET,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,YAAY,EAAE;IACpD,CAAC;;0EAbU,aAAa;6FAAb,aAAa;QCZ1B,yEACI;QAAA,yGACI;;QAGR,4DAAM;;QAJG,0DAAoC;QAApC,8IAAoC;;6FDWhC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAA0D;AACG;AACG;AAGzD,MAAM,SAAS,GAAW;IAC7B,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,4EAAe,EAAC;IAC7C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,yEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sEAAa,EAAC;IACzC,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;CACvD,CAAC;;;;;;;;;;;;;ACRF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICGtC,uEAAuD;IAAhB,sSAAe;IAAC,gEAAK;IAAA,4DAAI;;;IAGhE,uEAAmD;IAAA,uEAAY;IAAA,4DAAI;;;IAGnE,2EAA+C;IAAA,uDAAmB;IAAA,4DAAO;;;IAA1B,0DAAmB;IAAnB,gGAAmB;;;;IAGlE,uEAAyD;IAA7C,0SAAkB;IAA2B,+DAAI;IAAA,4DAAI;;ADJtE,MAAM,eAAe;IAK1B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;QAChC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK;QAE7B,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS;IAC7B,CAAC;;8EAlBU,eAAe;+FAAf,eAAe;QCV5B,yEACI;QAAA,oEAAqB;QACrB,yEAAkB;QAAA,uEAAkB;QAAA,iEAAM;QAAA,4DAAI;QAAA,4DAAM;QACpD,yEACI;QAAA,uEACI;QAAA,uGAAuD;;QAC3D,4DAAO;QACP,uEACI;QAAA,yGAAmD;;QACvD,4DAAO;QACP,wEACI;QAAA,+GAA+C;;QACnD,4DAAO;QACP,wEACI;QAAA,yGAAyD;;QAC7D,4DAAO;QACX,4DAAM;QACV,4DAAM;;;;;;QAZS,0DAA0B;QAA1B,uLAA0B;QAG1B,0DAA0B;QAA1B,wLAA0B;QAGR,0DAAyB;QAAzB,qLAAyB;QAGf,0DAAyB;QAAzB,sLAAyB;;6FDJvD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;AAOpC,MAAM,WAAW;IAOtB,YAAoB,MAAuB,EACjC,EAAuB,EACvB,MAAc;QAFJ,WAAM,GAAN,MAAM,CAAiB;QACjC,OAAE,GAAF,EAAE,CAAqB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;IAC7B,CAAC;IAEH,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI;IAClB,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG;IAChC,CAAC;IAED,KAAK,CAAC,KAAa,EAAE,QAAgB;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;aAChE,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,OAAO;YACxB,MAAM,MAAM,GAAG,QAAQ;YACvB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC5B,CAAC,CAAC;IACN,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,CAAC,KAAa,EAAE,QAAgB,EAAE,WAAgB;QACtD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC;aACpE,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,MAAM,GAAG,QAAQ;YACvB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,CAAC;QAC9C,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CACnC;IACL,CAAC;IACD,WAAW,CAAC,KAAa,EAAE,WAAmB,EAAE,MAAc;QAC5D,MAAM,IAAI,GAAG,SAAS,IAAI,CAAC,aAAa,EAAE;QAC1C,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,WAAW;YACxB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,WAAW;SACrB;QAED,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;aAC9B,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CACjC;IACL,CAAC;IACD,aAAa,CAAC,MAAc;QAC1B,MAAM,IAAI,GAAG,SAAS,IAAI,CAAC,aAAa,EAAE;QAC1C,MAAM,IAAI,GAAG;YACX,MAAM,EAAE,MAAM;SACf;QACD,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;aAC9B,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,SAAS;QACP,OAAO,IAAI,CAAC,MAAM;IACpB,CAAC;;sEAnEU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;;;;;;AAMpF,MAAM,aAAa;IAGxB,gBAAgB,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,kBAAkB;QACd,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QACV,IAAI;YACA,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC;SAC9F;QAAC,OAAM,GAAG,EAAE,GAAG;IACpB,CAAC;;0EAjBY,aAAa;6FAAb,aAAa;;;;;;QCN1B,yEACA;QAAA,yEACI;QAAA,yEACI;QAAA,2EAA+B;QACnC,4DAAM;QACL,4EACI;QAAA,sEAAqB;QACzB,4DAAM;QACX,4DAAM;QAEN,yEACI;QAAA,sEAAqB;QACzB,4DAAM;QACN,4DAAM;;6FDPO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;sCAEgC,aAAa;kBAA3C,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;AENvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,eAAe;IAK1B,YAAoB,EAAe,EAAU,MAAc;QAAvC,OAAE,GAAF,EAAE,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEhE,MAAM;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK;QACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW;QACpC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC;aAC3C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAC/C,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;IAChD,CAAC;;8EAdU,eAAe;+FAAf,eAAe;QCT5B,yEACI;QAAA,yEACI;QAAA,gFACI;QAAA,wEAAoB;QAAA,mEAAQ;QAAA,4DAAK;QACjC,2EAAqB;QAAA,gEAAK;QAAA,4DAAQ;QAClC,2EACA;QADwE,kLAAmB;QAA3F,4DACA;QAAA,2EAAqB;QAAA,iEAAK;QAAA,4DAAQ;QAClC,4EACA;QADuE,sLAAsB;QAA7F,4DACA;QAAA,4EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,4EAEA;QAF2F,yLAAyB;QAApH,4DAEA;QAAA,6EAAyG;QAAnC,wIAAS,YAAQ,IAAC;QAAiB,qEAAS;QAAA,4DAAS;QAC/H,4DAAO;QACX,4DAAM;QACV,4DAAM;;;QAT8E,0DAAmB;QAAnB,8EAAmB;QAEpB,0DAAsB;QAAtB,iFAAsB;QAEF,0DAAyB;QAAzB,oFAAyB;QAEhG,0DAAmC;QAAnC,qFAAmC;;6FDFtD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAWpC,MAAM,WAAW;IAStB,YAAoB,EAAuB,EAAU,MAAuB;QAAxD,OAAE,GAAF,EAAE,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAiB;QAE1E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrC,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE;gBACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAExB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,OAAO;QACL,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,IAAI,GAAG,UAAU,MAAM,EAAE;QAC7B,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;IAC7B,CAAC;IAED,QAAQ;QACN,MAAM,IAAI,GAAG,QAAQ;QACrB,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,GAAW;QACrB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;QAEhC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,SAAS;YACnB,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEzB,CAAC;IACD,YAAY;QACV,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,EAAE,GAAG,GAAG;YACjC,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG;YAC7B,GAAG,CAAC,cAAc,EAAE,CAAC;QACvB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,GAAG;YACpC,GAAG,CAAC,aAAa,EAAE,GAAG,GAAG;YACzB,GAAG,CAAC,aAAa,EAAE,CAAC;QAEtB,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;YACpC,OAAO,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;;sEA5DU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,aAAa;IAIxB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,EAAE;IACnB,CAAC;IAED,YAAY,CAAC,KAAK;QACf,IAAG,KAAK,CAAC,OAAO,KAAK,EAAE,EAAC;YACtB,IAAI,CAAC,IAAI,EAAE;SACZ;IACJ,CAAC;;0EAlBU,aAAa;6FAAb,aAAa;QCR1B,2EACA;QADyB,kLAAqB,sFAAY,wBAAoB,IAAhC;QAA9C,4DACA;QAAA,4EAA4C;QAAjB,qIAAS,UAAM,IAAC;QAAC,+DAAI;QAAA,4DAAS;;QADhC,gFAAqB;;6FDQjC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAO3C,MAAM,cAAc;IAIzB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,QAAQ;IAER,CAAC;IACD,KAAK;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;aAChD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAC/C,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;;4EAdU,cAAc;8FAAd,cAAc;QCT3B,yEACI;QAAA,yEACE;QAAA,wEAAoB;QAAA,iEAAM;QAAA,4DAAK;QAC7B,2EAKA;QAJE,iLAAmB;QADrB,4DAKA;QAAA,2EAIA;QAHE,oLAAsB;QADxB,4DAIA;QAAA,4EAGQ;QADA,sIAAS,WAAO,IAAC;QACjB,mEACR;QAAA,4DAAS;QACb,4DAAM;QACR,4DAAM;;QAdE,0DAAmB;QAAnB,8EAAmB;QAKnB,0DAAsB;QAAtB,iFAAsB;;6FDAnB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { ChatService } from '../services/chat.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './userlist.component.html',\n  styleUrls: ['./userlist.component.css']\n})\nexport class UserListComponent {\n  users: User[];\n\n  constructor(chat: ChatService) {\n    chat.getUsers().valueChanges().subscribe(users => {\n      this.users = users;\n    })\n  }\n}\n","<div class=\"userItem\">\n    <app-user-item\n    [user]=user *ngFor=\"let user of users\">\n    <p class=\"displayName\">\n    <span class=\"status\" [ngClass]=(user.status)></span> \n    {{user.apelido}}</p> \n    <p id=\"small\">{{user.email}}</p><br>\n    </app-user-item>\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDR4xzgvdcDD9LX0-y1Sfo02mvGhtJBzN8\",\n    authDomain: \"realtimechat-e6840.firebaseapp.com\",\n    databaseURL: \"https://realtimechat-e6840.firebaseio.com\",\n    projectId: \"realtimechat-e6840\",\n    storageBucket: \"realtimechat-e6840.appspot.com\",\n    messagingSenderId: \"614169051329\",\n    appId: \"1:614169051329:web:b399f864e9257910595440\",\n    measurementId: \"G-Y3CGDXSW6Q\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MyFireChat';\n}\n","<div class=\"chatRoom\">\n  <div class=\"chatHeaderWrapper\">\n    <app-navbar></app-navbar>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { UserListComponent } from './userlist/userlist.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { environment } from './../environments/environment';\nimport { AuthService } from './services/auth.service';\nimport { ChatService } from './services/chat.service';\nimport { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule} from 'angularfire2/database';\nimport { AngularFireAuthModule } from 'angularfire2/auth'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport { RoomComponent } from './room/room.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { MessageComponent } from './message/message.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { appRoutes } from 'src/routes';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent,\n    RoomComponent,\n    FeedComponent,\n    MessageComponent,\n    LoginComponent,\n    SignupComponent,\n    UserListComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  providers: [AuthService, ChatService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChatMessage } from './../../models/message';\nimport { AuthService } from './../services/auth.service';\nimport { ChatService } from './../services/chat.service';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  \n  @Input() chatMessage: ChatMessage;\n  userEmail: string;\n  userName: string;\n  messageContent: string;\n  timeStamp: Date = new Date();\n  isOwnMessage: boolean\n  ownEmail: string\n\n  constructor(private auth: AuthService) { \n    auth.authUser().subscribe(user =>{\n      this.ownEmail = user.email;\n      this.isOwnMessage = this.ownEmail === this.userEmail;\n    })\n  }\n\n  ngOnInit(): void{\n    this.messageContent = this.chatMessage.message;\n    this.timeStamp = this.chatMessage.timeSent;\n    this.userEmail = this.chatMessage.email\n    this.userName = this.chatMessage.userName\n    \n  }\n\n}\n","<div class=\"messageContainer\" [ngClass]=\"{'isOwnMessageContainer': isOwnMessage}\">\n    \n    <div class=\"messageData\" [ngClass]=\"{'isOwnMessageDat': isOwnMessage}\">\n    \n      <span class=\"sender\"  [ngClass]=\"{'isOwnSender': isOwnMessage}\">\n            {{userName}}\n        </span>\n  \n        <span class=\"timestamp\" [ngClass]=\"{'isOwnTimestamp': isOwnMessage}\">\n            {{timeStamp}}\n        </span>\n    </div>\n    \n      <div class=\"messageContent\" [ngClass]=\"{'isOwnMessageContent': isOwnMessage}\">\n          {{messageContent}}\n      </div>\n  </div>\n  \n  ","import { async } from '@angular/core/testing';\nimport { ChatMessage } from './../../models/message';\nimport { Observable } from 'rxjs';\nimport { ChatService } from './../services/chat.service';\nimport { Component, OnChanges, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\nexport class FeedComponent implements OnInit, OnChanges {\n  feed: Observable<any[]>;\n\n  constructor(private chat: ChatService) { }\n\n  ngOnInit(): void {\n\n    this.feed = this.chat.getMessages().valueChanges()\n\n  }\n  ngOnChanges(): void {\n    \n    this.feed = this.chat.getMessages().valueChanges()\n  }\n}\n","<div class=\"feed\">\n    <div *ngFor=\"let message of feed | async\" class=\"message\">\n        <p class=\"makeItCool\">Mensagem de:</p>\n        <app-message [chatMessage]=message></app-message>\n    </div>\n</div>","import { RoomComponent } from './app/room/room.component';\r\nimport { LoginComponent } from './app/login/login.component';\r\nimport { SignupComponent } from './app/signup/signup.component';\r\nimport {Routes} from '@angular/router';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: 'signup', component: SignupComponent},\r\n    { path: 'login', component: LoginComponent},\r\n    { path: 'chat', component: RoomComponent},\r\n    { path: '', redirectTo: '/login', pathMatch: 'full'}\r\n];","import { Observable } from 'rxjs';\nimport { AuthService } from './../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  user: Observable<firebase.User>\n  userEmail: any\n  userStatus: any\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.user = this.auth.authUser()\n    this.user.subscribe(user =>{\n      this.userEmail = user.email\n      \n    })\n  }\n  \n  logout() {\n    this.auth.logout();\n    this.userStatus = 'offline'\n  }\n}\n","<div class=\"navBar\">\n    <div id=\"logo\"></div>\n    <div id=\"heading\"><a routerLink=\"/\">MyChat</a></div>\n    <div class=\"links\">\n        <span>\n            <a *ngIf=\"!(user|async)?.uid\" href=\"#\" (click)=\"login\">Login</a>\n        </span>\n        <span>\n            <a *ngIf=\"!(user|async)?.uid\" routerLink=\"/signup\">Registrar-se</a>\n        </span>\n        <span>\n            <span id=\"userEmail\" *ngIf=\"(user|async)?.uid\">Hello {{userEmail}}</span>\n        </span>\n        <span>\n            <a href=\"#\" (click)=\"logout()\" *ngIf=\"(user|async)?.uid\">Sair</a>\n        </span>\n    </div>\n</div>\n","import { Observable } from 'rxjs';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router'\nimport * as firebase from 'firebase/app'\nimport { User } from '../../models/user'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private user: Observable<firebase.User>\n  private authState: any\n  private userId: string;\n  private data: Observable<string>\n\n  constructor(private afAuth: AngularFireAuth,\n    private db: AngularFireDatabase,\n    private router: Router) {\n    this.user = afAuth.authState;\n    }\n  \n  authUser() {\n    return this.user\n  }\n\n  get currentUserId(): string {\n    return this.authState.user.uid\n  }\n\n  login(email: string, password: string): Promise<void> {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password)\n      .then((resolve) => {\n        this.authState = resolve\n        const status = 'online'\n        this.setUserStatus(status)\n      })\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n    this.router.navigate(['login']);\n  }\n\n  signUp(email: string, password: string, displayName: any): Promise<void> {\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        this.authState = user;\n        const status = 'online'\n        this.setUserData(email, displayName, status)\n      }).catch(error => console.log(error)\n      )\n  }\n  setUserData(email: string, displayName: string, status: string): void {\n    const path = `users/${this.currentUserId}`\n    const data = {\n      email: email,\n      displayName: displayName,\n      status: status,\n      apelido: displayName\n    }\n\n    this.db.object(path).update(data)\n      .catch(error => console.log(error)\n      )\n  }\n  setUserStatus(status: string): void {\n    const path = `users/${this.currentUserId}`\n    const data = {\n      status: status\n    }\n    this.db.object(path).update(data)\n      .catch(error => console.log(error));\n  }\n  getUserId(): string {\n    return this.userId\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewChecked, ElementRef } from '@angular/core';\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent implements AfterViewChecked, OnInit {\n  @ViewChild('scroller') private feedContainer: ElementRef\n\n  constructor() { }\n\n  ngOnInit() { \n    this.scrollToBottom();\n}\n\nngAfterViewChecked() {        \n    this.scrollToBottom();        \n} \n\nscrollToBottom(): void {\n    try {\n        this.feedContainer.nativeElement.scrollTop = this.feedContainer.nativeElement.scrollHeight;\n    } catch(err) { }                 \n}\n\n}\n","<div class=\"oTodo\">\n<div class=\"mainContent\">\n    <div class=\"userListWrapper\">\n        <app-user-list></app-user-list>\n    </div>\n     <div #scroller class=\"feedWrapper\">\n         <app-feed></app-feed>\n     </div>\n</div>\n\n<div class=\"chatFormWrapper\">\n    <app-form></app-form>\n</div>\n</div>","import { AuthService } from './../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  email: string;\n  password: string;\n  displayName: string;\n  errorMsg: string;\n  constructor(private as: AuthService, private router: Router) { }\n\n  signUp(){\n    const email = this.email\n    const password = this.password\n    const displayName = this.displayName\n    this.as.signUp(email, password, displayName)\n    .then(resolve => this.router.navigate(['chat']))\n    .catch(error => this.errorMsg = error.message)\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"signUpCard\">\n        <form #signupForm=\"ngForm\">\n            <h2 class=\"heading\">Registro</h2>\n            <label class=\"label\">Email</label>\n            <input type=\"email\" name=\"email\" placeholder=\"Enter your email address\" [(ngModel)]=\"email\" maxlenght=\"60\" required class=\"formInput\"/>\n            <label class=\"label\">Senha</label>\n            <input type=\"password\" name=\"password\" placeholder=\"Choose a password\" [(ngModel)]=\"password\" required class=\"formInput\"/>\n            <label class=\"label\">Apelido</label>\n            <input class=\"formInput\" type=\"text\" name=\"displayName\" placeholder=\"Enter a display name\" [(ngModel)]=\"displayName\" required maxlength=\"12\"/>\n       \n            <button class=\"btn\" [disabled]=\"!signupForm.form.valid\" type=\"submit\" (click)=\"signUp()\" id=\"btn-signUp\">Registrar</button>\n        </form>\n    </div>\n</div>\n","import { AuthService } from './auth.service';\nimport { ChatMessage } from './../../models/message';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app'\nimport { AngularFireAuth } from 'angularfire2/auth'\n\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from 'angularfire2/database'\nimport { Observable } from 'rxjs';\nimport  { User } from '../../models/user'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  user: firebase.User\n  chatMessages: AngularFireList<any>\n  chatMessage: ChatMessage;\n  userName: Observable<any>;\n  userId: Observable<any>\n  message: Observable<string>\n  apelido: Observable<string>\n\n  constructor(private db: AngularFireDatabase, private afAuth: AngularFireAuth) {\n    \n    this.afAuth.authState.subscribe(auth => {\n      if (auth !== undefined && auth !== null) {\n        this.user = auth;\n        console.log(this.user);\n        \n      }\n    })\n  }\n  getUser(){\n    let userId = this.user.uid;\n    let path = `/users/${userId}`\n    return this.db.object(path)\n  }\n  \n  getUsers(){\n    const path = '/users'\n    return this.db.list(path)\n  }\n \n  sendMessage(msg: string) {\n    const timeStamp = this.getTimeStamp();\n    const email = this.user.email;\n    const userName = this.user.email\n\n    this.chatMessages = this.getMessages();\n    this.chatMessages.push({\n      message: msg,\n      timeSent: timeStamp,\n      userName: userName,\n      email: email\n    })\n    console.log(this.user);\n    \n  }\n  getTimeStamp(){\n    const now = new Date();\n    const date = now.getUTCDate() + '/' +\n      (now.getUTCMonth() + 1) + '/' +\n      now.getUTCFullYear();\n    const time = (now.getUTCHours()) + ':' +\n      now.getUTCMinutes() + ':' +\n      now.getUTCSeconds();\n\n    return (date + ' ' + time);\n  }\n  getMessages(): AngularFireList<ChatMessage> {\n    return this.db.list('messages', ref => {\n      return ref.limitToLast(25).orderByKey()\n    });\n  }\n}\n","import { ChatService } from './../services/chat.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  message: string\n\n  constructor(private chat: ChatService) { }\n\n  ngOnInit(): void {\n  }\n\n  send(){\n    this.chat.sendMessage(this.message)\n    this.message = \"\"\n  }\n\n  handleSubmit(event){\n     if(event.keyCode === 13){\n       this.send()\n     }\n  }\n\n}\n","<input class=\"chatInput\" [(ngModel)]=\"message\" (keydown)=\"handleSubmit($event)\"/>\n<button class=\"chatButton\" (click)=\"send()\">Send</button>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Router } from '@angular/router';\nimport { AuthService } from './../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: string\n  password: string\n  errorMsg: string\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit():void{\n\n  }\n  login() {\n\n    this.authService.login(this.email, this.password)\n    .then(resolve => this.router.navigate(['chat']))\n    .catch(error => this.errorMsg = error.message);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"loginCard\">\n      <h2 class=\"heading\">Log In</h2>\n        <input \n          [(ngModel)]=\"email\"\n          type=\"email\" \n          name=\"email\" \n          class=\"formInput\" />\n        <input type=\"password\" \n          [(ngModel)]=\"password\"\n          name=\"password\" \n          class=\"formInput\" />\n        <button class=\"btn\" \n                id=\"btn-login\" \n                (click)=\"login()\">\n                Log In\n        </button>\n    </div>\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}